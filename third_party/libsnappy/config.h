/* [rprichard] 2012-11-03.  The config.h generated by ./configure does nothing
 * but define preprocessor macros.  Every macro can be placed into one of these
 * categories:
 *
 *   (a) Standardized and ubiquitous (e.g. C90 headers, stdint.h).
 *   (b) Unportable but completely unused headers (e.g. strings.h/windows.h).
 *   (c) Extensive dependencies used by Snappy's automated testing system.
 *   (d) Compiler intrinsics.
 *   (e) Endianness detection and byte-swapping routines.
 *
 * The last three categories pose a real portability problem for this embedded 
 * Snappy module, but since I'm not running the automated tests for Snappy, I
 * really only care about the last two categories.  This header may need to be 
 * hacked up for each supported OS and compiler.
 *
 * I've replaced the existing comments above each definition with more useful
 * ones.  See config.h.in for the originals.
 * 
 * Before upgrading to a newer Snappy version, you should review whether the new
 * version requires any changes to this file. 
 * 
 * All of the original macros have been preserved, and in their original order.
 * Only their commented-out status has been changed. */


/* The only use of AC_APPLE_UNIVERSAL_BUILD is inside config.h, where it somehow
 * participates in the configuration of WORDS_BIGENDIAN. */
/* #undef AC_APPLE_UNIVERSAL_BUILD */

/* XXX: GCC/Clang-only */
#define HAVE_BUILTIN_CTZ 1
#define HAVE_BUILTIN_EXPECT 1

/* XXX: Probably Linux specific.  It looks like Snappy expects this header to
 * provide bswap_{16,32,64} macro functions. */
#define HAVE_BYTESWAP_H 1

/* Unnecessary/unportable headers. */
/* #undef HAVE_DLFCN_H */
/* #undef HAVE_GFLAGS */
/* #undef HAVE_GTEST */
/* #undef HAVE_INTTYPES_H */
/* #undef HAVE_LIBFASTLZ */
/* #undef HAVE_LIBLZF */
/* #undef HAVE_LIBLZO2 */
/* #undef HAVE_LIBQUICKLZ */
/* #undef HAVE_LIBZ */

/* C90 headers. */
#define HAVE_MEMORY_H 1
#define HAVE_STDDEF_H 1

/* C99 header. */
#define HAVE_STDINT_H 1

/* C90 header. */
#define HAVE_STDLIB_H 1

/* Unnecessary/unportable header. */
/* #undef HAVE_STRINGS_H */

/* C90 header. */
#define HAVE_STRING_H 1

/* Snappy's autoconf script looks for sys/byteswap.h and defines
 * HAVE_SYS_BYTESWAP_H, but then snappy-stubs-internal.h looks for
 * HAVE_SYS_BYTEORDER_H and includes <sys/byteorder.h>.  A typo?
 * AFAIK, it does not matter to the navigator project. */

/* XXX: These headers aren't on Linux, but maybe other Unix's use them? */
/* #undef HAVE_SYS_BYTESWAP_H */
/* #undef HAVE_SYS_ENDIAN_H */

/* Unnecessary Unix/Windows headers. */
/* #undef HAVE_SYS_MMAN_H */
/* #undef HAVE_SYS_RESOURCE_H */
/* #undef HAVE_SYS_STAT_H */
/* #undef HAVE_SYS_TYPES_H */
/* #undef HAVE_UNISTD_H */
/* #undef HAVE_WINDOWS_H */

/* Unused macros. */
/* #undef LT_OBJDIR */
/* #undef PACKAGE */
/* #undef PACKAGE_BUGREPORT */
/* #undef PACKAGE_NAME */
/* #undef PACKAGE_STRING */
/* #undef PACKAGE_TARNAME */
/* #undef PACKAGE_URL */
/* #undef PACKAGE_VERSION */
/* #undef STDC_HEADERS */
/* #undef VERSION */

/* It's feasible to detect the endianness using just built-in compiler macros.
 * Pull in an implementation of this from libindexdb. */
#include "../../libindexdb/Endian.h"
#if INDEXDB_BYTE_ORDER == INDEXDB_BIG_ENDIAN
    #define WORDS_BIGENDIAN 1
#endif
